// Generated by IcedCoffeeScript 1.8.0-e
(function() {
  var arg, bl, buf, data, err, http, i, iced, k, r, res, str, url, urls, __iced_deferrals, __iced_k, __iced_k_noop;

  iced = require('iced-runtime');
  __iced_k = __iced_k_noop = function() {};

  http = require("http");

  bl = require("bl");

  buf = new bl();

  urls = (function() {
    var _i, _len, _ref, _results;
    _ref = process.argv;
    _results = [];
    for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
      arg = _ref[i];
      if (i > 1) {
        _results.push(arg);
      }
    }
    return _results;
  })();

  res = [];

  err = [];

  data = [];

  str = (function() {
    var _i, _len, _results;
    _results = [];
    for (_i = 0, _len = urls.length; _i < _len; _i++) {
      i = urls[_i];
      _results.push("");
    }
    return _results;
  })();

  (function(_this) {
    return (function(__iced_k) {
      var _i, _len;
      __iced_deferrals = new iced.Deferrals(__iced_k, {
        filename: "/home/wukc/learnyounode/ex9.iced"
      });
      for (i = _i = 0, _len = urls.length; _i < _len; i = ++_i) {
        url = urls[i];
        http.get(url, __iced_deferrals.defer({
          assign_fn: (function(__slot_1, __slot_2) {
            return function() {
              return __slot_1[__slot_2] = arguments[0];
            };
          })(res, i),
          lineno: 10
        }));
      }
      __iced_deferrals._fulfill();
    });
  })(this)((function(_this) {
    return function() {
      (function(__iced_k) {
        var _i, _len;
        __iced_deferrals = new iced.Deferrals(__iced_k, {
          filename: "/home/wukc/learnyounode/ex9.iced"
        });
        for (i = _i = 0, _len = res.length; _i < _len; i = ++_i) {
          r = res[i];
          r.pipe(bl(__iced_deferrals.defer({
            assign_fn: (function(__slot_1, __slot_2, __slot_3, __slot_4) {
              return function() {
                __slot_1[__slot_2] = arguments[0];
                return __slot_3[__slot_4] = arguments[1];
              };
            })(err, i, data, i),
            lineno: 13
          })));
        }
        __iced_deferrals._fulfill();
      })(function() {
        var _i, _results;
        _results = [];
        for (k = _i = 0; _i <= 2; k = ++_i) {
          _results.push(console.log(data[k].toString()));
        }
        return _results;
      });
    };
  })(this));

}).call(this);
